@model DungeonsAndDragons.Models.PlayerCharacterModel

@using (Html.BeginForm("Create", "Players", FormMethod.Post, new { @class = "" }))
{
    if (!Html.ViewData.ModelState.IsValid)
    {
        @Html.ValidationSummary("", new {@class = "alert alert-warning"})
    }

    <div class="form-group">
        @Html.LabelFor(x => Model.Name)
        @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.ClassId)
        @Html.EnumDropDownListFor(x => Model.ClassId, new { @class="form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.RaceId)
        @Html.EnumDropDownListFor(x => Model.RaceId, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.Age)
        @Html.TextBoxFor(x => Model.Age, new { @class = "form-control", type = "number" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.GenderId)
        @Html.EnumDropDownListFor(x => Model.GenderId, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.Height)
        @Html.TextBoxFor(x => Model.Height, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.WeightPounds)
        @Html.TextBoxFor(x => Model.WeightPounds, new { @class = "form-control", type = "number" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.AlignmentId)
        @Html.EnumDropDownListFor(x => Model.AlignmentId, new { @class = "form-control" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => Model.DeityId)
        @Html.EnumDropDownListFor(x => Model.DeityId, new { @class = "form-control" })
    </div>
}