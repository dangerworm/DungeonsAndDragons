//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DungeonsAndDragons_Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class Power
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Power()
        {
            this.ClassPowersBridges = new HashSet<ClassPowersBridge>();
            this.PowerEffectsBridges = new HashSet<PowerEffectsBridge>();
            this.Prerequisites = new HashSet<Prerequisite>();
        }
    
        public int PowerId { get; set; }
        public string Name { get; set; }
        public string TextDescription { get; set; }
        public int PowerUsageId { get; set; }
        public int EffectTypeId { get; set; }
        public int ActionTypeId { get; set; }
        public int AttackTypeId { get; set; }
        public Nullable<int> PrerequisiteId { get; set; }
        public Nullable<byte> TargetType { get; set; }
        public Nullable<int> MinNumTargets { get; set; }
        public Nullable<int> MaxNumTargets { get; set; }
        public Nullable<int> AttackAbilityId { get; set; }
        public Nullable<int> AttackAbilityComplement { get; set; }
        public Nullable<int> AttackDefenseId { get; set; }
        public Nullable<int> AttackDefenseComplement { get; set; }
        public Nullable<int> HitAbilityId { get; set; }
        public Nullable<int> HitAbilityComplement { get; set; }
        public Nullable<int> DamageTypeId { get; set; }
        public Nullable<int> Duration { get; set; }
        public Nullable<int> DurationUnitId { get; set; }
        public Nullable<bool> HasSecondaryAttack { get; set; }
        public bool IsConjuration { get; set; }
        public bool IsZone { get; set; }
    
        public virtual Ability Ability { get; set; }
        public virtual Ability Ability1 { get; set; }
        public virtual ActionType ActionType { get; set; }
        public virtual AttackType AttackType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClassPowersBridge> ClassPowersBridges { get; set; }
        public virtual DamageType DamageType { get; set; }
        public virtual Defens Defens { get; set; }
        public virtual DurationUnit DurationUnit { get; set; }
        public virtual EffectType EffectType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PowerEffectsBridge> PowerEffectsBridges { get; set; }
        public virtual PowerUsage PowerUsage { get; set; }
        public virtual Prerequisite Prerequisite { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Prerequisite> Prerequisites { get; set; }
    }
}
